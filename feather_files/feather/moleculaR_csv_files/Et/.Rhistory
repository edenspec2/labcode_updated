library(moleculaR)
model.report('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\MolFeatures\\feather_example\\current_output.csv',
min = 2,
max = 4)
model.report('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\MolFeatures\\feather_example\\current_output.csv',
min = 2,
max = 4)
model.report('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\MolFeatures\\feather_example\\output_1.csv',
min = 2,
max = 4)
library(moleculaR)
model.report('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\MolFeatures\\feather_example\\output_1.csv',
min=2,
s
model.report('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\MolFeatures\\feather_example\\current_output.csv',
model.report('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\MolFeatures\\feather_example\\current_output.csv',
min=2,
max=4)
library(moleculaR)
model.report('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\MolFeatures\\feather_example\\output_3.csv', 2,4)
library(moleculaR)
model.report('C:\\Users\\edens\\Desktop\\nadeem_pca.csv', 5,6)
model.report('C:\\Users\\edens\\Desktop\\nadeem_pca.csv', 5,6)
model.report('C:\\Users\\edens\\Desktop\\nadeem_pca.csv', 5,6)
model.report('C:\\Users\\edens\\Desktop\\nadeem_pca.csv', 5,6)
model.report('C:\\Users\\edens\\Desktop\\nadeem_pca.csv', 5,6)
library(moleculaR)
help(package="moleculaR")
View(model.report)
library(moleculaR)
View(model.report)
help(package="moleculaR")
ring.vib.df(7,14,12,11,4,6)
library(moleculaR)
model.report('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\MolFeatures\\feather_example\\model_vibration_data.csv', 2,4)
3213
1
exit
model.report('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\MolFeatures\\feather_example\\model_vibration_data.csv', 2,4)
model.report('C:\\Users\\edens\Documents\\GitHub\\LabCode\\MolFeatures\\feather_example\\output_test.csv', 2,4)
model.report('C:\\Users\\edens\Documents\\GitHub\\LabCode\\MolFeatures\\feather_example\\output_test.csv', 2,4)
View(model.subset())
View(model.subset)
library('moleculaR')
moleculaR.Input.Maker()
R.version.string
library('moleculaR')
install.packages('remotes', repos = getCRANmirrors()[1,"URL"])
remotes::install_github('https://github.com/barkais/moleculaR.git')
library('moleculaR')
moleculaR.Input.Maker()
library(htmltools)
moleculaR.Input.Maker()
moleculaR('C:\Users\edens\Documents\GitHub\LabCode\feather_files\feather\moleculaR_inputs.txt')
moleculaR('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\feather_files\\feather\\moleculaR_inputs.txt')
moleculaR('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\feather_files\\feather\\moleculaR_inputs.txt')
setwd("~/GitHub/LabCode/feather_files/feather/moleculaR_csv_files")
moleculaR('C:\\Users\\edens\\Documents\\GitHub\\LabCode\\feather_files\\feather\\moleculaR_inputs.txt')
moleculaR:::steRimol('Et')
moleculaR:::steRimol('Et','1 15')
moleculaR:::steRimol('Me','1 15')
list.files()
moleculaR:::steRimol('Me','1 15')
setwd('../Optimized_structures_xyz/')
moleculaR:::steRimol.xyz('Me','1 15')
moleculaR:::steRimol.xyz('Me.xyz','1 15')
setwd('../moleculaR_csv_files/')
steRimol.df('1 15')
setwd('Et/')
moleculaR:::steRimol('1 15')
